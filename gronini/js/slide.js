// Generated by CoffeeScript 1.4.0
(function() {
  var Diaporama, Slide, init;

  init = function() {
    var container, data, i, slider, _i;
    data = [];
    container = document.getElementById('container');
    for (i = _i = 0; _i < 10; i = ++_i) {
      data.push({
        content: '<h1 contenteditable="true"> NÂ°' + i + ' title',
        id: i
      });
    }
    return slider = new Diaporama(data, container);
  };

  Diaporama = (function() {

    function Diaporama(data, container) {
      var index, item, self, _i, _j, _len, _ref;
      this.data = data;
      this.totalSlide = this.data.length;
      this.currentSlide = 0;
      this.slides = [];
      _ref = this.data;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        item = _ref[_i];
        this.slides.push(new Slide(item));
      }
      console.log(this.slides);
      for (index = _j = 0; _j < 3; index = ++_j) {
        this.create(this.slides[index]);
      }
      this.slides[0]["class"]('current');
      this.slides[1]["class"]('next');
      this.slides[2]["class"]('far_next');
      self = this;
      document.addEventListener("keydown", function(e) {
        switch (e.keyCode) {
          case 37:
            return self.left();
          case 39:
            return self.right();
        }
      });
    }

    Diaporama.prototype.create = function(slide) {
      return container.appendChild(slide.element);
    };

    Diaporama.prototype.right = function() {
      if (this.currentSlide < this.totalSlide - 1) {
        this.currentSlide += 1;
        console.log(this.currentSlide);
        if (this.currentSlide > 0) {
          this.slides[this.currentSlide - 1]["class"]('prev');
        }
        if (this.currentSlide > 1) {
          this.slides[this.currentSlide - 2]["class"]('far_prev');
        }
        if (this.currentSlide > 2) {
          this.slides[this.currentSlide - 3].remove();
        }
        this.slides[this.currentSlide]["class"]('current');
        if (this.currentSlide < this.totalSlide - 1) {
          this.slides[this.currentSlide + 1]["class"]('next');
        }
        if (this.currentSlide < this.totalSlide - 2) {
          this.create(this.slides[this.currentSlide + 2]);
          this.slides[this.currentSlide + 2]["class"]('far_next');
        }
      }
    };

    Diaporama.prototype.left = function() {
      if (this.currentSlide > 0) {
        this.currentSlide -= 1;
        console.log(this.currentSlide);
        if (this.currentSlide < this.totalSlide) {
          this.slides[this.currentSlide + 1]["class"]('next');
        }
        if (this.currentSlide < this.totalSlide - 2) {
          this.slides[this.currentSlide + 2]["class"]('far_next');
        }
        if (this.currentSlide < this.totalSlide - 3) {
          this.slides[this.currentSlide + 3].remove();
        }
        this.slides[this.currentSlide]["class"]('current');
        if (this.currentSlide > 0) {
          this.slides[this.currentSlide - 1]["class"]('prev');
        }
        if (this.currentSlide > 1) {
          this.create(this.slides[this.currentSlide - 2]);
          this.slides[this.currentSlide - 2]["class"]('far_prev');
        }
      }
    };

    return Diaporama;

  })();

  Slide = (function() {

    function Slide(data) {
      this.data = data;
      this.element = document.createElement('section');
      this.element.innerHTML = this.data.content;
      this.element.id = 'slide-' + this.data.id;
      this.element.className = 'slide';
    }

    Slide.prototype["class"] = function(className) {
      if (className) {
        this.element.className = 'slide ' + className;
      }
    };

    Slide.prototype.remove = function() {
      return $(this.element).remove();
    };

    return Slide;

  })();

  init();

}).call(this);
